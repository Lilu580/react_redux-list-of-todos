{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","helpers.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialFilter","ALL","filterReducer","LoadedTodos","error","loading","initialState","todos","isError","isLoading","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","todosFilter","selectDispatch","visibleTodos","value","copy","ACTIVE","completed","COMPLETED","title","toLowerCase","includes","getVisibleTodos","className","map","id","classNames","onClick","selectedTodo","find","handleOnSelect","TodoFilter","filterDispatch","handleSelect","useCallback","event","target","onSubmit","preventDefault","onChange","Object","values","current","toUpperCase","slice","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","currentDispatch","useState","user","setUser","setIsError","setIsLoading","getUserFromServer","a","userFromServer","useEffect","displayModal","href","email","name","App","todosDispatch","getTodosFromServer","todosFromServer","TodosAction","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5a68347.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = { type: 'currentTodo/SET'; payload: Todo; };\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n    case 'currentTodo/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetStatusAction = { type: 'filters/setStatus', payload: Status };\ntype SetQueryAction = { type: 'filters/setQuery', payload: string };\ntype ClearQueryAction = { type: 'filters/clearQuery' };\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filters/setStatus',\n  payload: status,\n});\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filters/setQuery',\n  payload: query,\n});\n\nconst clearQuery = (): ClearQueryAction => ({\n  type: 'filters/clearQuery',\n});\n\nexport const actions = { setStatus, setQuery, clearQuery };\n\ntype State = {\n  status: Status,\n  query: string,\n};\n\ntype Action = SetStatusAction | SetQueryAction | ClearQueryAction;\n\nconst initialFilter = {\n  status: Status.ALL,\n  query: '',\n};\n\nconst filterReducer = (\n  state: State = initialFilter,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filters/setStatus':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    case 'filters/setQuery':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filters/clearQuery':\n      return {\n        ...state,\n        query: '',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SetTodos', payload: Todo[] };\ntype SetErrorAction = { type: 'todos/SetError', payload: boolean };\ntype SetLoadingAction = { type: 'todos/SetLoading', payload: boolean };\n\nconst SetTodos = (LoadedTodos: Todo[]): SetTodosAction => ({\n  type: 'todos/SetTodos',\n  payload: LoadedTodos,\n});\n\nconst SetError = (error: boolean): SetErrorAction => ({\n  type: 'todos/SetError',\n  payload: error,\n});\n\nconst SetLoading = (loading: boolean) : SetLoadingAction => ({\n  type: 'todos/SetLoading',\n  payload: loading,\n});\n\nexport const actions = { SetTodos, SetError, SetLoading };\n\ntype Action = SetTodosAction | SetErrorAction | SetLoadingAction;\nexport type TodoState = {\n  todos: Todo[],\n  isError: boolean,\n  isLoading: boolean,\n};\n\nconst initialState = {\n  todos: [],\n  isError: false,\n  isLoading: true,\n};\n\nconst todosReducer = (\n  state = initialState,\n  action: Action,\n): TodoState => {\n  switch (action.type) {\n    case 'todos/SetError':\n      return {\n        ...state,\n        isError: action.payload,\n      };\n    case 'todos/SetTodos':\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    case 'todos/SetLoading':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { TodoState } from '../../features/todos';\nimport { getVisibleTodos } from '../../helpers';\n\nexport const TodoList: React.FC = () => {\n  const { todos } = useAppSelector<TodoState>(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todosFilter = useAppSelector(state => state.filter);\n  const selectDispatch = useAppDispatch();\n  const visibleTodos\n    = getVisibleTodos(todos, todosFilter.query, todosFilter.status);\n\n  const handleOnSelect = (id: number) => {\n    const selectedTodo = todos.find(todo => todo.id === id);\n\n    if (selectedTodo) {\n      selectDispatch(actions.setTodo(selectedTodo));\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => {\n          const { completed, id, title } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleOnSelect(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye-slash': currentTodo?.id === id },\n                      { 'fa-eye': currentTodo?.id !== id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const getVisibleTodos = (\n  todos:Todo[],\n  value: string,\n  filter: Status,\n) => {\n  let copy = [...todos];\n\n  switch (filter) {\n    case Status.ACTIVE:\n      copy = todos.filter(todo => !todo.completed);\n      break;\n\n    case Status.COMPLETED:\n      copy = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  return copy.filter(todo => (\n    todo.title.toLowerCase().includes(value.toLowerCase())\n  ));\n};\n","import React, { useCallback } from 'react';\nimport { Status } from '../../types/Status';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const filterDispatch = useAppDispatch();\n  const { query } = useAppSelector(state => state.filter);\n\n  const handleSelect = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      switch (event.target.value) {\n        case Status.ALL:\n          filterDispatch(actions.setStatus(Status.ALL));\n          break;\n\n        case Status.ACTIVE:\n          filterDispatch(actions.setStatus(Status.ACTIVE));\n          break;\n\n        case Status.COMPLETED:\n          filterDispatch(actions.setStatus(Status.COMPLETED));\n          break;\n\n        default:\n          break;\n      }\n    }, [],\n  );\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    filterDispatch(actions.setQuery(event.target.value));\n  };\n\n  const handleClearSearch = () => {\n    filterDispatch(actions.setQuery(''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n          >\n            {Object.values(Status).map(current => (\n              <option value={current}>\n                {`${current[0].toUpperCase() + current.slice(1)}`}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            >\n              {}\n            </button>\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  currentTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo }) => {\n  const {\n    userId,\n    completed,\n    title,\n    id,\n  } = currentTodo;\n  const currentDispatch = useAppDispatch();\n\n  const [user, setUser] = useState<User>();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getUserFromServer = async () => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  const displayModal = !isLoading && !isError && user;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      ) }\n      { displayModal ? (\n        <div className={classNames(\n          'modal-card',\n          'notification',\n          {\n            'is-success': completed,\n            'is-danger': !completed,\n          },\n        )}\n        >\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n            <button\n              aria-label=\"close-modal-button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => currentDispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block has-text-dark\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block has-text-dark\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n\n          </div>\n        </div>\n      ) : (\n        <div className=\"modal-card notification is-danger\">\n          <header className=\"modal-card-head\">\n            <div className=\"modal-card-title\">\n              Error\n            </div>\n            <button\n              aria-label=\"close-modal-button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => currentDispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <article className=\"modal-card-body\">\n            <p className=\"block has-text-dark has-text-weight-medium\">\n              The error has happened...\n            </p>\n          </article>\n        </div>\n\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as TodosAction } from './features/todos';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const { todos, currentTodo } = useAppSelector(state => state);\n  const { isLoading } = todos;\n  const todosDispatch = useAppDispatch();\n\n  const getTodosFromServer = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      todosDispatch(TodosAction.SetTodos(todosFromServer));\n    } catch {\n      todosDispatch(TodosAction.SetError(true));\n    } finally {\n      todosDispatch(TodosAction.SetLoading(false));\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal currentTodo={currentTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}